// all of this only minor midifications to https://github.com/Tyrrrz/YoutubeExplode

namespace YtReader.Yt;

public record YtVideoItem {
  public string     Id         { get; init; }
  public DateTime?  UploadDate { get; init; }
  public string     Title      { get; init; }
  public TimeSpan   Duration   { get; init; }
  public Statistics Statistics { get; init; }
}

/// <summary>User activity statistics.</summary>
public record Statistics(ulong? ViewCount, ulong? LikeCount = null, ulong? DislikeCount = null) {
  public ulong?  Rumbles       { get; init; }
  public double? AverageRating { get; init; }
  public override string ToString() => $"{ViewCount} Views";
}

/// <summary>Text that gets displayed at specific time during video playback, as part of a <see cref="CaptionTrack" /> .</summary>
public record CaptionLine(string Text, TimeSpan? Offset, TimeSpan? Duration, string Speaker = null) {
  public override string ToString() =>
    $"{new[] { Offset.Dot(o => o.HumanizeShort()), Speaker }.NotNull().ToArray().Dot(d => d.Any() ? $"{d.Join(" ")}: " : "")}{Text}";
}

/// <summary>Set of captions that get displayed during video playback.</summary>
public record CaptionTrack(CaptionTrackInfo Info, IReadOnlyList<CaptionLine> Captions);

/// <summary>Metadata associated with a certain <see cref="CaptionTrack" />.</summary>
public record CaptionTrackInfo(string Url, CaptionLang Language, bool IsAutoGenerated) {
  public bool Default { get; init; }
  public override string ToString() => $"{Language}";
}

/// <summary>Language information.</summary>
public record CaptionLang(string Code, string Name) {
  public override string ToString() => $"{Code} ({Name})";
}